//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.10.20 at 12:23:53 PM BST 
//


package _int.iho.s100fd;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for S100_CD_QuantitySpecification.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="S100_CD_QuantitySpecification"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="angularVelocity"/&gt;
 *     &lt;enumeration value="area"/&gt;
 *     &lt;enumeration value="density"/&gt;
 *     &lt;enumeration value="duration"/&gt;
 *     &lt;enumeration value="frequency"/&gt;
 *     &lt;enumeration value="length"/&gt;
 *     &lt;enumeration value="mass"/&gt;
 *     &lt;enumeration value="planeAngle"/&gt;
 *     &lt;enumeration value="power"/&gt;
 *     &lt;enumeration value="pressure"/&gt;
 *     &lt;enumeration value="salinity"/&gt;
 *     &lt;enumeration value="speed"/&gt;
 *     &lt;enumeration value="temperature"/&gt;
 *     &lt;enumeration value="volume"/&gt;
 *     &lt;enumeration value="weight"/&gt;
 *     &lt;enumeration value="otherQuantity"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "S100_CD_QuantitySpecification")
@XmlEnum
public enum S100CDQuantitySpecification {

    @XmlEnumValue("angularVelocity")
    ANGULAR_VELOCITY("angularVelocity"),
    @XmlEnumValue("area")
    AREA("area"),
    @XmlEnumValue("density")
    DENSITY("density"),
    @XmlEnumValue("duration")
    DURATION("duration"),
    @XmlEnumValue("frequency")
    FREQUENCY("frequency"),
    @XmlEnumValue("length")
    LENGTH("length"),
    @XmlEnumValue("mass")
    MASS("mass"),
    @XmlEnumValue("planeAngle")
    PLANE_ANGLE("planeAngle"),
    @XmlEnumValue("power")
    POWER("power"),
    @XmlEnumValue("pressure")
    PRESSURE("pressure"),
    @XmlEnumValue("salinity")
    SALINITY("salinity"),
    @XmlEnumValue("speed")
    SPEED("speed"),
    @XmlEnumValue("temperature")
    TEMPERATURE("temperature"),
    @XmlEnumValue("volume")
    VOLUME("volume"),
    @XmlEnumValue("weight")
    WEIGHT("weight"),
    @XmlEnumValue("otherQuantity")
    OTHER_QUANTITY("otherQuantity");
    private final String value;

    S100CDQuantitySpecification(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static S100CDQuantitySpecification fromValue(String v) {
        for (S100CDQuantitySpecification c: S100CDQuantitySpecification.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
